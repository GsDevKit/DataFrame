name: GEMSTONE_CI

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the development branch
on:
  push:
  pull_request:
    branches:
      - gs_master
  schedule:
    - cron: "15 2 29 * *" #run job on the 29th day of every month on the 15th minute of the 2nd hour


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]
        gsvers: [ 3.6.1 ]
    runs-on: ${{ matrix.os }}
    env:
      GS_VERS: ${{ matrix.gsvers }}
      PLATFORM: ${{ matrix.os }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # download the $GS_VERS product tree
      - name: setup
        run: |
          set -x
          pushd ..
            # install superDoit and a $GS_VERS stone, so we can use superDoit scripts
            # to run the DataFrame CI tests using Rowan
            git clone https://github.com/dalehenrich/superDoit.git
            pushd superDoit
             git checkout issue_21
             pushd tests/products
                ${GITHUB_WORKSPACE}/../superDoit/dev/downloadGemStone.sh ${GS_VERS}
              popd
              if [ "$PLATFORM" = "macos-10.15" ] ; then
                export GEMSTONE="${GITHUB_WORKSPACE}/../superDoit/tests/products/GemStone64Bit${GS_VERS}-i386.Darwin"
              else
                export GEMSTONE="${GITHUB_WORKSPACE}/../superDoit/tests/products/GemStone64Bit${GS_VERS}-x86_64.Linux"
              fi
            cp $GEMSTONE/bin/extent0.dbf $GEMSTONE/data
            chmod +w $GEMSTONE/data/extent0.dbf
            sudo mkdir /opt/gemstone
            sudo chmod oug+rwx /opt/gemstone
            ls -l /opt
            sudo mkdir /opt/gemstone/locks
            sudo chmod oug+rwx /opt/gemstone/locks
            ls -l /opt
            ls -l /opt/gemstone /opt/gemstone/locks
            $GEMSTONE/bin/startstone superDoit_$GS_VERS
            . ${GITHUB_WORKSPACE}/../superDoit/dev/defPath.env
            cat - > $GEMSTONE/data/.topazini << EOF
            SET GEMSTONE superDoit_$GS_VERS
            set user SystemUser
            set password swordfish
            EOF
            # test a simple doit to confirm superDoit install went well
            simple.stone -- -l -I $GEMSTONE/data/.topazini
          popd
  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - build
    runs-on: ubuntu-18.04
    steps:
       - name: Slack Workflow Notification
         uses: Gamesight/slack-workflow-status@master
         with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_DALEHENRICH}}
          name: 'action run' 
